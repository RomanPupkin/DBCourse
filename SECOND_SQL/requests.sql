/* #1 */
WITH MAN_THREE_MONTH_SUM AS
    (SELECT MANAGER_ID,
            SALE_DATE,
            MANAGER_FIRST_NAME,
            MANAGER_LAST_NAME,
            SALE_AMOUNT,
            SUM(SALE_AMOUNT) OVER (
                PARTITION BY MANAGER_ID
                ORDER BY SALE_DATE RANGE BETWEEN INTERVAL '3' MONTH PRECEDING AND
                INTERVAL '0' MONTH FOLLOWING
                ) AS SUM_BY_THREE_MONTHS
FROM V_FACT_SALE
WHERE SALE_DATE BETWEEN TO_DATE('2013-11-01', 'YYYY-MM-DD') AND TO_DATE('2014-12-31', 'YYYY-MM-DD')
)
SELECT
    DISTINCT MANAGER_ID,
    MANAGER_FIRST_NAME,
    MANAGER_LAST_NAME,
    TO_CHAR(SALE_DATE, 'MM') AS MAN_MONTH,
    (SUM_BY_THREE_MONTHS*0.05) AS BONUS
FROM MAN_THREE_MONTH_SUM
WHERE SUM_BY_THREE_MONTHS IN (
    SELECT MAX(SUM_BY_THREE_MONTHS) OVER (
        PARTITION BY TO_CHAR(SALE_DATE, 'YYYY-MM')
        ORDER BY SALE_DATE ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
        ) AS MAX_BY_MONTH
    FROM MAN_THREE_MONTH_SUM
    WHERE SALE_DATE BETWEEN TO_DATE('2014-01-01', 'YYYY-MM-DD') AND TO_DATE('2014-12-31', 'YYYY-MM-DD')
)
ORDER BY MAN_MONTH;

/* #2 */
WITH ALL_SUMS_BY_OFFICE AS (
    SELECT OFFICE_ID,
           TO_CHAR(SALE_DATE, 'YYYY') AS YEAR_OFFICE,
           SUM(SALE_AMOUNT) OVER (
               PARTITION BY OFFICE_ID
               ORDER BY SALE_DATE RANGE BETWEEN INTERVAL '1' YEAR PRECEDING AND
               CURRENT ROW
               ) AS SUM_BY_OFFICE
    FROM V_FACT_SALE
    WHERE SALE_DATE BETWEEN TO_DATE('2013-01-01', 'YYYY-MM-DD') AND TO_DATE('2014-12-31', 'YYYY-MM-DD')
),
    SUMS_BY_OFFICE_BY_YEAR AS (
        SELECT DISTINCT OFFICE_ID,
                        YEAR_OFFICE,
                        MAX(SUM_BY_OFFICE) OVER (
                            PARTITION BY OFFICE_ID, YEAR_OFFICE
                            ORDER BY YEAR_OFFICE ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
                            ) AS SUM_BY_YEAR_OFFICE
        FROM ALL_SUMS_BY_OFFICE
    )
SELECT DISTINCT SBOBY.OFFICE_ID,
                CITY_NAME,
                COUNTRY,
                YEAR_OFFICE,
                --SUM_BY_YEAR_OFFICE / SUM(SUM_BY_YEAR_OFFICE) OVER(
                --    PARTITION BY YEAR_OFFICE
                --    ORDER BY YEAR_OFFICE ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
                --    ),
                RATIO_TO_REPORT(SUM_BY_YEAR_OFFICE) OVER (
                    PARTITION BY YEAR_OFFICE
                    ) AS PROPORTION
FROM SUMS_BY_OFFICE_BY_YEAR SBOBY
    INNER JOIN V_FACT_SALE ON V_FACT_SALE.OFFICE_ID = SBOBY.OFFICE_ID
ORDER BY OFFICE_ID;

/* #3 */
WITH PR_SUM_BY_MONTH AS (
    SELECT PRODUCT_ID,
           TO_CHAR(SALE_DATE, 'MM') AS PR_MONTH,
           SUM(SALE_QTY) OVER (
               PARTITION BY PRODUCT_ID
               ORDER BY TO_CHAR(SALE_DATE, 'MM') RANGE BETWEEN CURRENT ROW
               AND CURRENT ROW
               )                    AS ALL_SUMS_BY_MONTH,
           SUM(SALE_QTY) OVER (
               PARTITION BY PRODUCT_ID
               ORDER BY TO_NUMBER(TO_CHAR(SALE_DATE, 'MM')) RANGE BETWEEN 1 PRECEDING
               AND CURRENT ROW
               )                    AS ALL_SUMS_BY_TWO_MONTHS
    FROM V_FACT_SALE
    WHERE SALE_DATE BETWEEN TO_DATE('2014-01-01', 'YYYY-MM-DD') AND TO_DATE('2014-06-30', 'YYYY-MM-DD')
),
     PR_SUM_PROPERTIES AS (
         SELECT DISTINCT PRODUCT_ID,
                         PR_MONTH,
                         MAX(ALL_SUMS_BY_MONTH) OVER (
                             PARTITION BY PRODUCT_ID, PR_MONTH
                             ORDER BY PR_MONTH ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
                             ) AS SUM_BY_MONTH,
                         MAX(ALL_SUMS_BY_TWO_MONTHS) OVER (
                             PARTITION BY PRODUCT_ID, PR_MONTH
                             ORDER BY PR_MONTH ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
                             ) AS SUM_BY_TWO_MONTHS
         FROM PR_SUM_BY_MONTH
     )
SELECT DISTINCT PRODUCT_ID,
                PR_MONTH,
                SUM_BY_MONTH / LAG(SUM_BY_MONTH, 1, SUM_BY_MONTH) OVER (
                    PARTITION BY PRODUCT_ID
                    ORDER BY PR_MONTH
                    ) AS RELATION,
                DECODE(SUM_BY_MONTH - SUM_BY_TWO_MONTHS, 0,
                    SUM_BY_MONTH / SUM_BY_MONTH,
                    SUM_BY_MONTH / (SUM_BY_TWO_MONTHS - SUM_BY_MONTH)) AS RELATION_WITHOUT_LAG
FROM PR_SUM_PROPERTIES
ORDER BY PRODUCT_ID;
